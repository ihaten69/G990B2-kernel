name: Build S21FE Kernel (Neutron Clang via AntMan)

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-22.04
    env:
      ARCH: arm64
      SUBARCH: arm64
      DEVICE_DEFCONFIG: r9q_eur_openx2_defconfig

    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v4

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget bc bison flex build-essential zip curl ccache libncurses5-dev python3
          mkdir -p $HOME/toolchains/neutron-clang

      - name: Download and Sync Neutron Clang (AntMan)
        run: |
          cd $HOME/toolchains/neutron-clang
          curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"
          chmod +x antman
          ./antman -S
          echo "Neutron Clang synced successfully."

      - name: Verify Available Defconfigs
        run: ls arch/arm64/configs/

      - name: Configure Kernel
        run: |
          export PATH=$HOME/toolchains/neutron-clang/bin:$PATH
          make O=out $DEVICE_DEFCONFIG CC=clang LLVM=1 LLVM_IAS=1

      - name: Build Kernel
        run: |
          export PATH=$HOME/toolchains/neutron-clang/bin:$PATH
          make O=out CC=clang LLVM=1 LLVM_IAS=1 -j$(nproc)
          echo "Kernel build complete."

      - name: Package with AnyKernel3
        run: |
          git clone https://github.com/osm0sis/AnyKernel3.git
          cp out/arch/arm64/boot/Image* AnyKernel3/
          cd AnyKernel3
          zip -r9 ../S21FE-Kernel-Neutron.zip *
          echo "Kernel packaged successfully."

      - name: Upload Kernel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: S21FE-Kernel-Neutron
          path: S21FE-Kernel-Neutron.zip

